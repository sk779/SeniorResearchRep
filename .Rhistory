log(1)
plot(table(log(5+degree(dnv))))
plot(table(log(10+degree(dnv))))
log(2)
plot(table(log(2+degree(dnv))))
d=d15b
dnv=set.vertex.attribute(d, 'vic', index=V(d), 0)
rand_vics = sample(V(d), 1299, prob=log((5+degree(dnv))))
dnv=set.vertex.attribute(dnv, 'vic', index=rand_vics, 1)
d=dnv
mean(degree(d,vics==1))
vics = get.vertex.attribute(d,'vic')
mean(degree(d,vics==1))
mean(degree(d,vics==0))
dnv=set.vertex.attribute(d, 'vic', index=V(d), 0)
rand_vics = sample(V(d), 1299, prob=log((3+degree(dnv))))
dnv=set.vertex.attribute(dnv, 'vic', index=rand_vics, 1)
d=dnv
mean(degree(d,vics==1))
mean(degree(d,vics==0))
d=d15b
dnv=set.vertex.attribute(d, 'vic', index=V(d), 0)
rand_vics = sample(V(d), 1299, prob=log((3+degree(dnv))))
dnv=set.vertex.attribute(dnv, 'vic', index=rand_vics, 1)
d=d15b
mean(degree(d,vics==1))
vics = get.vertex.attribute(d,'vic')
mean(degree(d,vics==1))
mean(degree(d,vics==0))
d=dnv
vics = get.vertex.attribute(d,'vic')
mean(degree(d,vics==1))
mean(degree(d,vics==0))
nvics=c()
for (i in 1:vcount(d)){
v = V(d)[i]
nbhd = neighborhood(d,3,v)
nbhd = nbhd[[1]]
nnbrs = length(nbhd)
if (nnbrs>1){
nbhd = nbhd[2:nnbrs]
nvics[i] = sum(get.vertex.attribute(d, 'vic', nbhd))
} else {
nvics[i] = 0
}
}
vics = get.vertex.attribute(d,'vic')
mean(nvics[vics==1])
mean(nvics[vics==0])
nvics=c()
for (i in 1:vcount(d)){
v = V(d)[i]
nbhd = neighborhood(d,2,v)
nbhd = nbhd[[1]]
nnbrs = length(nbhd)
if (nnbrs>1){
nbhd = nbhd[2:nnbrs]
nvics[i] = sum(get.vertex.attribute(d, 'vic', nbhd))
} else {
nvics[i] = 0
}
}
vics = get.vertex.attribute(d,'vic')
mean(nvics[vics==1])
mean(nvics[vics==0])
nvics=c()
for (i in 1:vcount(d)){
v = V(d)[i]
nbhd = neighborhood(d,1,v)
nbhd = nbhd[[1]]
nnbrs = length(nbhd)
if (nnbrs>1){
nbhd = nbhd[2:nnbrs]
nvics[i] = sum(get.vertex.attribute(d, 'vic', nbhd))
} else {
nvics[i] = 0
}
}
vics = get.vertex.attribute(d,'vic')
mean(nvics[vics==1])
mean(nvics[vics==0])
data.frame
data.frame(a)
data.frame('a'
)
data.frame('a')
c(1,4)
c(1;4)
c(1:4)
c(1:4)'
c('degnv','degv','n1nv','n1v','n2nv','n2v','n3nv','n3v')
1.494455
c(1.494455,2.438799,0.07688974,0.1170131,0.2732951,0.5111624,1.019681,1.78137)
labels=c('degnv','degv','n1nv','n1v','n2nv','n2v','n3nv','n3v')
l3=c(1.494455,2.438799,0.07688974,0.1170131,0.2732951,0.5111624,1.019681,1.78137)
rbind(labels,l3)
c('3',1.494455,2.438799,0.07688974,0.1170131,0.2732951,0.5111624,1.019681,1.78137)
data.frame(labels,l3)
data=c(1.48673,2.672055,0.07839388,0.3048499,0.3667049,1.284065,1.501568,4.685142)
"log3"=3
"log(3+deg)"=3
log(3+deg)
"log(3+deg)"
dnv=set.vertex.attribute(d, 'vic', index=V(d), 0)
rand_vics = sample(V(d), 1299)#, prob=log((3+degree(dnv))))
dnv=set.vertex.attribute(dnv, 'vic', index=rand_vics, 1)
d=dnv
mean(degree(d,vics==1))
mean(degree(d,vics==0))
vics = get.vertex.attribute(d,'vic')
mean(degree(d,vics==1))
mean(degree(d,vics==0))
lg3
lg
random
rand=c(1.524767,1.52348)
rand=c(1.524767,1.52348,0.05458254,0.05850654,0.1713193,0.1862972,0.6112173,0.6343341)
data.frame(labels,l3,row.names=c('lab','log3'))
data.frame(labels,l3,row.names=c('lab','log3','3','4','5','6','7','7'))
data.frame(labels,l3,row.names=c('lab','log3','3','4','5','6','7','8'))
rownames=c('mean degree non-vics','log3','3','4','5','6','7','8'))
rownames=c('mean degree non-vics','log3','3','4','5','6','7','8')
data.frame(labels,l3,row.names=rownames)
rownames=c('mean degree non-vics','mean degree vics','3','4','5','6','7','8')
data.frame(labels,data,rand,l3)
lgdeg=l3
data.frame(labels,data,rand,lgdeg)
vert_sampling=data.frame(labels,data,rand,lgdeg)
vert_sampling
View(vert_sampling)
save(vert_sampling,'vert_samply.Rda')
save(vert_sampling,'vert_sampling.Rda')
save(vert_sampling,file='vert_sampling.Rda')
save.image("~/Documents/Yale/Senior Year/Spring 2014/Sociology 472 Individual Study/data/vert_sampling.RData")
load("~/Documents/Yale/Senior Year/Spring 2014/Sociology 472 Individual Study/data/vert_sampling.Rda")
vert_sampling
load("~/Documents/Yale/Senior Year/Spring 2014/Sociology 472 Individual Study/data/vert_sampling.Rda")
View(vert_sampling)
View(vert_sampling)
barplot(c(vert_sampling[1,i], vert_sampling[2,i]))
i=2
barplot(c(vert_sampling[1,i], vert_sampling[2,i]))
plot(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]))
plot(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
lines(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]))
library(ggplot)
library(ggplot2)
ggplot(vert_sampling)
ggplot(c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
ggplot(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
lines(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]))
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
lines(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]))
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
lines(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]))
plot
plot.new
plot()
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),type=l)
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),type='l')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),type='l',col='r')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),type='l',col='red')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),type='tl',col='red')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),type='l',col='red')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',col='red')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
legend(1,1)
xy.coords(1,1)
xy.coords(1)
legend(xy.coords(1))
title('hi')
title('Victims in Neighborhood')
legend('topleft')
legend('topleft',c('Victim','Non-Victim'))
legend(1,4,c('Victim','Non-Victim'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'))
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('1','1'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('l','l'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('l','l')col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('l','l'),col=c('red','black'))
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]))
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('l','l'),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('l','l'),lwd=c(2.5,2.5),col=c('red','black'))
vert_sampling[8,i]
legend(1,4,c('Victim','Non-Victim'),lty=c('l','l'),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c('1','1'),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),pch=c('1','1'),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),pch=c('l','l'),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),pch=c(NA,'l'),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),pch=c(NA,NA),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),pch=c(NA,NA),lty=c(1,2),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),pch=c(NA,NA),lty=c(1,1),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),col=c('red','black'))
pch=c(NA,NA),
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),col=c('red','black'))
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),xlab=c('a','b'))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'),ylab='b')
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'),
ylab='Mean Degree of Nodes')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
par(mfrow=c(2,1))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'),
ylab='Mean Degree of Nodes')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
par(mfrow=c(1,2))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'),
ylab='Mean Degree of Nodes')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
par(mfrow=c(3,1))
for (i in 2:4){
par(mfrow=c(1,2))
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'),
ylab='Mean Degree of Nodes')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
}
par(mfrow=c(3,2))
for (i in 2:4){
barplot(c(vert_sampling[1,i], vert_sampling[2,i]),names.arg=c('Non-Vics','Vics'),
ylab='Mean Degree of Nodes')
plot(c(1,2,3),c(vert_sampling[4,i],vert_sampling[6,i],vert_sampling[8,i]),
type='l',lwd=2,col='red',xlab='Size of Neighborhood',ylab='Mean Number of Vics')
lines(c(1,2,3),c(vert_sampling[3,i],vert_sampling[5,i],vert_sampling[7,i]),lwd=2)
title('Victims in Neighborhood')
legend(1,vert_sampling[8,i],c('Victim','Non-Victim'),lty=c(1,1),lwd=c(2,2),col=c('red','black'))
}
"aa"+"b"
paste('aa','bb')
paste('aa','bb',sep='-')
a='aa'
paste(a,'bb',sep='-')
paste(file,"DD.dat",sep='-'))
paste(file,"DD.dat",sep='-')
file = 'gals1'
paste(file,"DD.dat",sep='-')
library(plyr)
library(ggplot2)
ReadPairs <- function (fn) {
# Read in a pairs file, and fill in a list with useful information. This also rebins the data in r
# Args :
#   fn : filename
# Outputs :
#     pairs : array (nmu, nr) of pair counts
ff <- gzfile(fn, "r")
# Read in rbins
rbins <- scan(ff,numeric(0),nlines=1)
nrbins <- length(rbins)-1
mubins <- scan(ff, numeric(0),nlines=1)
nmubins <- length(mubins)-1
pairs <- array(scan(ff, numeric(0)), c(nmubins, nrbins))
close(ff)
list(rbins=rbins, mubins=mubins, pairs=pairs)
}
ReadNorm <- function(fn) {
# Read in the norm file
read.table(fn)[,2]
}
pp <- ReadPairs(paste(file,"DD.dat",sep='-'))
setwd('/Users/Ben/Documents/Yale/Senior Year/Spring 2014/Physics 472 Independent Projects in Physics/SeniorResearchRep')
file = '../data/gals1'
pp <- ReadPairs(paste(file,"DD.dat",sep='-'))
norm <- ReadNorm(paste(file,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
dfile = '../data/gals2'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
#ggsave("t1-xi.png", plot=gg)
gg
dfile = '../data/gals_1mil'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
dfile = '../data/gals1mil'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
#ggsave("t1-xi.png", plot=gg)
gg
r0
gg=gg+ggplot(xi+1, aes(x=r0, y=xi))
qplot(xi$ro,xi$xi)
paste(dfile,'xi.png',sep='-')
xi
onemil=xi
dfile = '../data/gals1'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
g1mil=onemil
g1=xi
g1
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
ggplot(g1mil,aes(x=r0,y=xi))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))+ggplot(g1mil,aes(x=r0,y=xi))
gg <- ggplot(xi, aes(x=r0, y=xi),g1mil,aes(x=r0,y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))+geom_step(data = g1mil)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))+ geom_point() +geom_step(data = g1mil)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- ggplot(g1mil, aes(x=r0, y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(g1mil, aes(x=r0, y=xi))
gg <- ggplot(g1, aes(x=r0, y=xi))
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
mean
gg <- ggplot(xi, aes(x=r0, y=xi)) +geom_point() +  geom_point(data = g1, aes(y = mean),
colour = 'red', size = 3)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi)) +geom_point() +  geom_point(data = g1, aes(y = xi),
colour = 'red', size = 3)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi)) +geom_point() +  geom_point(data = g1mil, aes(y = xi),
colour = 'red', size = 3)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'red', size = 1)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi)) +
geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi)) +
geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
dfile = '../data/gals1b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
g1b=xi
gg <- ggplot(g1, aes(x=r0, y=xi)) +
geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'green', size = 2) +
geom_point() +  geom_point(data = g1b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
ggsave('~/Desktop/gals1-xi.png', plot=gg)
ggsave('~/Desktop/gals1-xi.png', plot=gg)
gg <- ggplot(g1, aes(x=r0, y=xi))
gg=gg+ geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'green', size = 2) +
geom_point() +  geom_point(data = g1b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(g1, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = g1mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = g1b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
