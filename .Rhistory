m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
}
mean(n)
mean(degree(lcc,rand_vics))
lccnv=delete.vertices(lcc,vic_ids)
mean(degree(lcc,vic_ids))
for (i in 1:1000){
rand_vics = sample(V(lcc), nvics, prob=degree(lcc))#log((3+10*degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
i
mean(degree(lcc,rand_vics))
mean(degree(lcc,rand_vics))
mean(degree(lcc,rand_vics))
n
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
for (i in 1:100){
rand_vics = sample(V(lcc), nvics, prob=degree(lcc))#log((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
i
n=m=t=d=rep(0,100)
nvics = sum(get.vertex.attribute(lcc,'vic')==1)
nvics
d[i] = mean(degree(lcc,rand_vics))
d
d[i] = mean(degree(lcc,rand_vics))
rand_vics = sample(V(lcc), nvics, prob=degree(lcc))#log((3+degree(lcc))))
d[i] = mean(degree(lcc,rand_vics))
for (i in 1:100){
rand_vics = sample(V(lcc), nvics, prob=degree(lcc))#log((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
#d[i] = mean(degree(lcc,rand_vics))
}
for (i in 1:100){
rand_vics = sample(V(lcc), nvics, prob=degree(lcc))#log((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
mean(n)
sd(n)
mean(m)
mean(n)
sd(m)
mean(t)
sd(t)
mean(d)
sd(d)
n=m=t=d=rep(0,100)
nvics = sum(get.vertex.attribute(lcc,'vic')==1)
for (i in 1:100){
rand_vics = sample(V(lcc), nvics)#log((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
mean(d)
sd(d)
mean(n)
sd(n)
mean(m)
sd(m)
mean(t)
sd(t)
n=m=t=d=rep(0,100)
nvics = sum(get.vertex.attribute(lcc,'vic')==1)
for (i in 1:100){
rand_vics = sample(V(lcc), nvicslog((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
n=m=t=d=rep(0,100)
nvics = sum(get.vertex.attribute(lcc,'vic')==1)
for (i in 1:100){
rand_vics = sample(V(lcc), nvics)log((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
n=m=t=d=rep(0,100)
nvics = sum(get.vertex.attribute(lcc,'vic')==1)
for (i in 1:100){
rand_vics = sample(V(lcc), nvics, prob=log((3+degree(lcc))))
lccnv=delete.vertices(lcc,rand_vics)
c=clusters(lccnv)
n[i] = c$no
m[i] = max(c$csize)
t[i] = table(c$csize)[[1]]
d[i] = mean(degree(lcc,rand_vics))
}
mean(n)
sd(n)
mean(m)
sd(m)
mean(t)
sd(t)
mean(d)
sd(d)
lcc
nvics
455/6890
lcc
vic_ids
table(degree(lcc))
hist(degree(lcc))
h=hist(degree(lcc))
h
table(degree(lcc))
table(degree(lcc,vics=vic_ids))
table(degree(lcc,vids=vic_ids))
table(degree(lcc,v=vic_ids))
table(degree(lcc))
library(plyr)
library(ggplot2)
ReadPairs <- function (fn) {
# Read in a pairs file, and fill in a list with useful information. This also rebins the data in r
# Args :
#   fn : filename
# Outputs :
#     pairs : array (nmu, nr) of pair counts
ff <- gzfile(fn, "r")
# Read in rbins
rbins <- scan(ff,numeric(0),nlines=1)
nrbins <- length(rbins)-1
mubins <- scan(ff, numeric(0),nlines=1)
nmubins <- length(mubins)-1
pairs <- array(scan(ff, numeric(0)), c(nmubins, nrbins))
close(ff)
list(rbins=rbins, mubins=mubins, pairs=pairs)
}
ReadNorm <- function(fn) {
# Read in the norm file
read.table(fn)[,2]
}
# Process the pairs file
# Here, we assume that this is generated assuming purely periodic boundary conditions
# Therefore RR is completely isotropic and can be analytically estimated.
setwd('/Users/Ben/Documents/Yale/Senior Year/Spring 2014/Physics 472 Independent Projects in Physics/SeniorResearchRep')
dfile = '../data/gals_hs1'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
upw=xi
dfile = '../data/gals_hs1b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
nupw=xi
dfile = '../data/gals_full'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
dat=xi
gg <- ggplot(upw, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = dat, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(upw, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = dat, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
ggsave('../plots/gals_full-xi.png', plot=gg)
gg <- ggplot(upw, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = dat, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
ggsave('../plots/gals_full-xi2.png', plot=gg)
rdf=data.frame(r0=g4$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
gg
rdf
rdf=data.frame(r0=g4$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
rdf=data.frame(r0=upw$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
rdf
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
gg
ggsave('../plots/gals_full-ratios.png', plot=gg)
gg <- gg+geom_point()+scale_y_log10()
gg
dfile = '../data/gals2mil'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
dat=xi
dfile = '../data/gals328'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
upw=xi
dfile = '../data/gals328b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
nupw=xi
gg <- ggplot(upw, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = dat, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
ggsave('../plots/gals_328-xi.png', plot=gg)
rdf=data.frame(r0=upw$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
gg
gg <- ggplot(dat, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = upw, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
ggsave('../plots/gals_328-xi.png', plot=gg)
dfile = '../data/gals_full'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
dat=xi
dfile = '../data/gals_hs1'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
upw=xi
dfile = '../data/gals_hs1b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
nupw=xi
gg <- ggplot(dat, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = upw, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
ggsave('../plots/gals_328-xi.png', plot=gg)
rdf=data.frame(r0=upw$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
gg
ggsave('../plots/gals_full-xi.png', plot=gg)
gg <- ggplot(dat, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = upw, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
ggsave('../plots/gals_full-xi.png', plot=gg)
dfile = '../data/gals2mil'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
dat=xi
dfile = '../data/gals328'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
upw=xi
dfile = '../data/gals328b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
nupw=xi
gg <- ggplot(dat, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = upw, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
ggsave('../plots/gals_328-xi.png', plot=gg)
rdf=data.frame(r0=upw$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
gg
ggsave('../plots/gals_328-ratios.png', plot=gg)
