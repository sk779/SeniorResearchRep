randg = erdos.renyi.game(n=vcount(lcc),p.or.m=ecount(lcc),type='gnm')
gg=gg+qplot(1:11,plh_randg_lcc)
gg
plh_lcc
gg=qplot(1:29,plh_lcc)+scale_y_log10()
gg
randg = erdos.renyi.game(n=vcount(lcc),p.or.m=ecount(lcc),type='gnm')
average.path.length(randg)
plot(log(plh_lcc),type='l',col='blue')
lines(log(plh_randg_lcc),type='l',col='red')
plot((plh_lcc),type='l',col='blue',log='y')
lines(log(plh_randg_lcc),type='l',col='red')
plot((plh_lcc),type='l',col='blue',log='y')
lines((plh_randg_lcc),type='l',col='red')
plot((plh_lcc),type='o',col='blue',log='y')
lines((plh_randg_lcc),type='o',col='red')
max(plh_randg_lcc)
max(plh_lcc)
plot((plh_lcc),type='o',col='blue',log='y',xrange=c(0,3380978))
plot((plh_lcc),type='o',col='blue',log='y',xlim=c(0,3380978))
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(0,3380978))
plot((plh_lcc),type='o',col='blue',log='y',y)
plot((plh_lcc),type='o',col='blue',log='y')
lines((plh_randg_lcc),type='o',col='red')
log(333)
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(0,log(3380978)))
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(1,log(3380978)))
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(1,(3380978)))
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(0,(3380978)))
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(0.1,(3380978)))
lines((plh_randg_lcc),type='o',col='red')
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(1,(3380978)))
lines((plh_randg_lcc),type='o',col='red')
title('dd')
title('d')
xlab('Length of Shortest Path')
title(xlab('Length of Shortest Path'))
title(xlab='Length of Shortest Path')
title(xlab='Length of Shortest Path',ylab='Number of Paths')
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(1,3380978))
lines((plh_randg_lcc),type='o',col='red')
title(xlab='Length of Shortest Path',ylab='Number of Paths')
legend(25,x=1e+6)
legend(25,x=1e+6,'ss')
legend(25,x=1e+6,c('data','ar'))
legend(25,x=1e+6,c('Crime Net','Random Graph'))
legend(25,x=1e+6,c('Crime Net','Random Graph'),col=('blue','red'))
legend(25,x=1e+6,c('Crime Net','Random Graph'),col=c('blue','red'))
legend
legend(25,x=1e+6,c('Crime Net','Random Graph'),col=c('blue','red'))
legend(25,x=1,c('Crime Net','Random Graph'),col=c('blue','red'))
legend(2,x=1,c('Crime Net','Random Graph'),col=c('blue','red'))
legend(2,1,c('Crime Net','Random Graph'),col=c('blue','red'))
legend(25,10,c('Crime Net','Random Graph'),col=c('blue','red'))
legend(25,10,c('Crime Net','Random Graph'),col=c('blue','red'),cex=.7)
legend(20,10,c('Crime Net','Random Graph'),col=c('blue','red'),cex=.7)
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),cex=.7)
1e6
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),cex=.7)
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),lty=2,cex=.7)
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),lty=1,cex=.7)
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),lty=1,cex=.8)
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(1,3380978))
lines((plh_randg_lcc),type='o',col='red')
title(xlab='Length of Shortest Path',ylab='Number of Paths')
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),lty=1,cex=.8)
plot((plh_lcc),type='o',col='blue',log='y',ylim=c(1,3380978),xlab='Length of Shortest Path',ylab='Number of Paths')
lines((plh_randg_lcc),type='o',col='red')
legend(20,1e6,c('Crime Net','Random Graph'),col=c('blue','red'),lty=1,cex=.8)
tr
mean(tr)
mean(a;l)
mean(apl)
dim(apl)
barplot(c(6,3))
table(2,2)
barplot(table(2,2)
barplot(table(2,2))
table(3,6)
table(6,5)
barplot(table(6,5))
table(c(1,1),c(11,22))
barplot(table(c(1,1),c(11,22)))
barplot(table(c(1,3),c(11,22)))
barplot(table(c(1,13),c(11,22)))
barplot(table(c(1,13),c(1,22)))
barplot(table(c(1,13),c('aa',22)))
barplot(table(c(1,13),c('aa','22')))
barplot(table(c(1,13),c('aa','b22')))
barplot(table(c(6.825739,5.356589),c('aa','b22')))
mtcars
mtcars$vs
mtcars$gear
counts <- table(mtcars$vs, mtcars$gear)
counts
table
randg
mean(apl)
mean(tr)
for(i in 1:100){
randg = erdos.renyi.game(n=vcount(lcc),p.or.m=ecount(lcc),type='gnm')
trg[i]=transitivity(randg)
trl[i]=transitivity(randg,type='local')
apl[i]=average.path.length(randg)
#print(i)
}
trg=0
for(i in 1:100){
randg = erdos.renyi.game(n=vcount(lcc),p.or.m=ecount(lcc),type='gnm')
trg[i]=transitivity(randg)
trl[i]=transitivity(randg,type='local')
apl[i]=average.path.length(randg)
#print(i)
}
trl=0
for(i in 1:100){
randg = erdos.renyi.game(n=vcount(lcc),p.or.m=ecount(lcc),type='gnm')
trg[i]=transitivity(randg)
trl[i]=transitivity(randg,type='local')
apl[i]=average.path.length(randg)
#print(i)
}
warnings()
transitivity(randg,type='local')
mean(transitivity(randg,type='local'))
mean(transitivity(randg,type='local'),na.rm=TRUE)
for(i in 1:100){
randg = erdos.renyi.game(n=vcount(lcc),p.or.m=ecount(lcc),type='gnm')
trg[i]=transitivity(randg)
trl[i]=mean(transitivity(randg,type='local'),na.rm=TRUE)
apl[i]=average.path.length(randg)
#print(i)
}
trg
mean(trg)
sd(trg)
mean(apl)
sd(apl)
mean(trl)
sd(trl)
average.path.length
mean(transitivity(lcc,type='local',vids=vic_ids),na.rm=TRUE,)
transitivity(lcc,type='local',vids=vic_ids)
vic_ids
transitivity(d,type='local',vids=vic_ids)
mean(transitivity(d,type='local',vids=vic_ids),na.rm=TRUE,)
v(d)[-vic_ids]
V(d)[-vic_ids]
non_vic_ids = which(V(d)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
non_vic_ids = which(V(d)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
mean(transitivity(d,type='local',vids=non_vic_ids),na.rm=TRUE,)
union(vic_ids,non_vic_ids)
mean(transitivity(d,type='local',vids=non_vic_ids),na.rm=TRUE,)
mean(transitivity(d,type='local',vids=vic_ids),na.rm=TRUE,)
vic_ids = which(V(lcc)$vic==TRUE)  #V(d)[get.vertex.attribute(d,'vic')==1]
non_vic_ids = which(V(lcc)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
mean(transitivity(d,type='local',vids=non_vic_ids),na.rm=TRUE,)
mean(transitivity(d,type='local',vids=non_vic_ids),na.rm=TRUE)
mean(transitivity(d,type='local',vids=vic_ids),na.rm=TRUE)
mean(transitivity(lcc,type='local',vids=non_vic_ids),na.rm=TRUE)
mean(transitivity(lcc,type='local',vids=vic_ids),na.rm=TRUE)
shortest.paths(lcc,vic_ids,vic_ids)
spv=shortest.paths(lcc,vic_ids,vic_ids)
mean(spv)
mean(transitivity(lcc,type='local',vids=vic_ids),na.rm=TRUE)
mean(transitivity(lcc,type='local',vids=non_vic_ids),na.rm=TRUE)
mean(shortest.paths(lcc,vic_ids,vic_ids))
mean(shortest.paths(lcc,non_vic_ids,non_vic_ids))
library(igraph)
load("/Users/Ben/Documents/Yale/Senior Year/Spring 2014/Sociology 472 Individual Study/Example Chicago Networks/district15.RData")
d=d15b
vic_ids = which(V(d)$vic==TRUE)  #V(d)[get.vertex.attribute(d,'vic')==1]
non_vic_ids = which(V(d)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
sp=shortest.paths(d,non_vic_ids,non_vic_ids)
sp[is.infinite(sp)]=vcount(d)
mean(sp)
library(igraph)
load("/Users/Ben/Documents/Yale/Senior Year/Spring 2014/Sociology 472 Individual Study/Example Chicago Networks/district15.RData")
d=d15b
vic_ids = which(V(d)$vic==TRUE)  #V(d)[get.vertex.attribute(d,'vic')==1]
non_vic_ids = which(V(d)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
subnet = induced.subgraph(graph=d,vids=unique(unlist(neighborhood(d,2,vic_ids))))
subnet
lcc=subnet
clusters(subnet)$csize
average.path.length(lcc)
average.path.length(lcc,unconnected=FALSE)
transitivity(lcc,type='global')
mean(transitivity(lcc,type='local',isolates='zero'))
d=lcc
average.path.length(d,unconnected=TRUE)
mean(transitivity(d,type='local',vids=vic_ids,isolates='zero'))
vic_ids = which(V(lcc)$vic==TRUE)  #V(d)[get.vertex.attribute(d,'vic')==1]
non_vic_ids = which(V(lcc)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
mean(transitivity(d,type='local',vids=vic_ids,isolates='zero'))
mean(transitivity(d,type='local',vids=non_vic_ids,isolates='zero'))
lcc
mean(shortest.paths(d,vic_ids,vic_ids))
mean(shortest.paths(d,non_vic_ids,non_vic_ids))
mean(degree(d,vic_ids))
mean(degree(d,non_vic_ids))
sp=shortest.paths(d,vic_ids,vic_ids)
sp[is.infinite(sp)]=vcount(d)
mean(sp)
sp=shortest.paths(d,non_vic_ids,non_vic_ids)
sp[is.infinite(sp)]=vcount(d)
mean(sp)
trg=trl=aplT=aplF=rep(0,100)
for(i in 1:100){
randg = erdos.renyi.game(n=vcount(d),p.or.m=ecount(d),type='gnm')
trg[i]=transitivity(randg,type='global')
trl[i]=mean(transitivity(randg,type='local',isolates='zero'))
aplT[i]=average.path.length(randg,unconnected=TRUE)
aplF[i]=average.path.length(randg,unconnected=FALSE)
if (i%%25==0) print(i)
}
mean(trg);sd(trg);mean(trl);sd(trl);mean(aplT);sd(aplT);mean(aplF);sd(aplF)
d
mean(shortest.paths(d,vic_ids,vic_ids))
d=d15b
vic_ids = which(V(d)$vic==TRUE)  #V(d)[get.vertex.attribute(d,'vic')==1]
non_vic_ids = which(V(d)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
subnet = induced.subgraph(graph=d,vids=unique(unlist(neighborhood(d,2,vic_ids))))
compid = which.max(clusters(subnet)$csize)
lcc = induced.subgraph(subnet,which(clusters(subnet)$membership==compid))
lcc
mean(shortest.paths(lcc,vic_ids,vic_ids))
vic_ids = which(V(lcc)$vic==TRUE)  #V(d)[get.vertex.attribute(d,'vic')==1]
non_vic_ids = which(V(lcc)$vic==FALSE)  #V(d)[get.vertex.attribute(d,'vic')==0]
mean(shortest.paths(lcc,vic_ids,vic_ids))
mean(shortest.paths(lcc,vic_ids,V(lcc)))
mean(shortest.paths(lcc,non_vic_ids,V(lcc)))
mean(shortest.paths(lcc,non_vic_ids,non_vic_ids))
library(plyr)
library(ggplot2)
ReadPairs <- function (fn) {
# Read in a pairs file, and fill in a list with useful information. This also rebins the data in r
# Args :
#   fn : filename
# Outputs :
#     pairs : array (nmu, nr) of pair counts
ff <- gzfile(fn, "r")
# Read in rbins
rbins <- scan(ff,numeric(0),nlines=1)
nrbins <- length(rbins)-1
mubins <- scan(ff, numeric(0),nlines=1)
nmubins <- length(mubins)-1
pairs <- array(scan(ff, numeric(0)), c(nmubins, nrbins))
close(ff)
list(rbins=rbins, mubins=mubins, pairs=pairs)
}
ReadNorm <- function(fn) {
# Read in the norm file
read.table(fn)[,2]
}
setwd('/Users/Ben/Documents/Yale/Senior Year/Spring 2014/Physics 472 Independent Projects in Physics/SeniorResearchRep')
dfile = '../data/gals4'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
gg <- ggplot(g4, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = g2mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = g4b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = g2mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = g4b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = g2mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = g4b, aes(y = xi), colour = 'red', size = 2)
g4=xi
dfile = '../data/gals4b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
g4b=xi
dfile = '../data/gals2mil'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
g2mil=xi
gg <- ggplot(xi, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = g2mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = g4b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
g2mil
gg <- ggplot(g4, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = g2mil, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = g4b, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
head(g4$xi)
head(g4$xi/g2mil$xi)
head(g4$r0/g2mil$r0)
a
g4/g2mil
gg <- ggplot(g4/g2mil, aes(x=g4$r0, y=xi))
gg <- ggplot(g4/g2mil, aes(x=r0, y=xi))
gg <- ggplot((g4/g2mil), aes(x=r0, y=xi))
gg
gg <- ggplot((g4/g2mil), aes(x=r0, y=xi))
comp1 = g4/g2mil
g4/g2mil
g4$xi/g2mil$xi
comp1 = g4$xi/g2mil$xi
comp1
ggplot(comp1)
comp2 = g4b$xi/g2mil$xi
comp2
data.frame(r0=g4$r0,comp1=comp1,comp2=comp2)
rdf=data.frame(r0=g4$r0,comp1=comp1,comp2=comp2)
gg <- ggplot(rdf, aes(x=r0, y=comp1))
gg
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg
baseline = g2mil$xi/g2mil$xi
rdf=data.frame(r0=g4$r0,bl=bl,comp1=comp1,comp2=comp2)
bl = g2mil$xi/g2mil$xi
comp1 = g4$xi/g2mil$xi
comp2 = g4b$xi/g2mil$xi
rdf=data.frame(r0=g4$r0,bl=bl,comp1=comp1,comp2=comp2)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(rdf, aes(y = comp2), colour = 'red', size = 2)
rdf
gg <- gg + geom_point() +  geom_point(rdf, aes(y = comp1), colour = 'green', size = 2)
bl = data.frame(y=g2mil$xi/g2mil$xi,x=g4$r0)
bl
bl = data.frame(x=g4$r0,y=g2mil$xi/g2mil$xi)
bl = data.frame(x=g4$r0,y=g2mil$xi/g2mil$xi)
comp1 = data.frame(x=g4$r0,y=g4$xi/g2mil$xi)
comp1 = data.frame(x=g4$r0,y=g4b$xi/g2mil$xi)
gg <- ggplot(bl, aes(x, y))
gg <- gg + geom_point() +  geom_point(comp1, aes(y = y), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=comp1, aes(y = y), colour = 'green', size = 2)
bl = g2mil$xi/g2mil$xi
comp1 = g4$xi/g2mil$xi
comp2 = g4b$xi/g2mil$xi
rdf=data.frame(r0=g4$r0,bl=bl,comp1=comp1,comp2=comp2)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg
dat=g2mil
dfile = '../data/gals3'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
upw=xi
dfile = '../data/gals3b'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
nupw=xi
gg <- ggplot(upw, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = dat, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
upw
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
nupw=xi
dfile = '../data/gals3'
pp <- ReadPairs(paste(dfile,"DD.dat",sep='-'))
norm <- ReadNorm(paste(dfile,"norm.dat",sep='-'))
Lbox <- 1000.0
density <- norm/(Lbox^3)
dd <- colSums(pp$pairs)
rlo <- pp$rbins[-length(pp$rbins)]
rhi <- pp$rbins[-1]
# These parameters define the logarithmic bins
rmin <- 0.3
rmax <- 200
nbins <- 200
logbins <- exp(seq(log(rmin),log(rmax),length.out=nbins))
ir <- cut(rlo, logbins, right=TRUE)
# Make data frame
df <- data.frame(ir=ir, rlo=rlo, rhi=rhi, dd=dd)
xi <- na.omit(ddply(df, .(ir), summarise, rmin=min(rlo), rmax=max(rhi), ddsum=sum(dd)))
xi$rrsum <- (4*pi/3)*((xi$rmax^3) - (xi$rmin^3))*density*norm
xi$xi <- xi$ddsum/xi$rrsum - 1
xi$r0 <- sqrt(xi$rmin*xi$rmax)
upw=xi
gg <- ggplot(upw, aes(x=r0, y=xi))
gg <- gg + geom_point() +  geom_point(data = dat, aes(y = xi), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data = nupw, aes(y = xi), colour = 'red', size = 2)
gg <- gg + geom_point()+scale_x_log10()+scale_y_log10()
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
bl = dat$xi/dat$xi
comp1 = upw$xi/dat$xi
comp2 = nupw$xi/dat$xi
rdf=data.frame(r0=g4$r0,bl=bl,comp1=comp1,comp2=comp2)
rdf=data.frame(r0=g4$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
rdf=data.frame(r0=g4$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab(expression(xi(r)))
gg
rdf=data.frame(r0=g4$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
gg
rdf=data.frame(r0=g4$r0,bl=dat$xi/dat$xi,comp1=upw$xi/dat$xi,comp2=nupw$xi/dat$xi)
gg <- ggplot(rdf, aes(x=r0, y=bl))
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp1), colour = 'green', size = 2)
gg <- gg + geom_point() +  geom_point(data=rdf, aes(y = comp2), colour = 'red', size = 2)
gg <- gg + xlab("r (Mpc/h)")  + ylab("Observed over Simulated Ratio")
ggsave('../plots/gals3-ratios.png', plot=gg)
logbins
plot(logbins)
pp$rbins
